CREATE DATABASE STOCK;
USE STOCK;

SELECT * FROM STOCK_DATA;
-- KPI 1
CREATE VIEW KPI_1 AS SELECT TICKER, CONCAT(FORMAT(AVG(VOLUME)/1000000,2),' ','MILLIONS') AS AVERAGE_VOLUME FROM STOCK_DATA 
GROUP BY TICKER ORDER BY AVERAGE_VOLUME DESC;
SELECT * FROM KPI_1 ;-- AVERGAE DAILY TRADING VOLUME
-- KPI 2
CREATE VIEW KPI_2 AS SELECT TICKER , TRUNCATE(AVG(BETA),4) AS VOLATILE FROM STOCK_DATA
GROUP BY TICKER ORDER BY VOLATILE DESC;
SELECT * FROM KPI_2; -- MOST VOLATILE STOCKS


-- KPI 3
CREATE VIEW KPI_3 AS SELECT TICKER, SUM(`DIVIDEND AMOUNT`) AS DIVIDEND FROM STOCK_DATA
GROUP BY TICKER ORDER BY DIVIDEND DESC;
SELECT * FROM KPI_3; -- STOCKS WITH DIVIDEND

-- KPI 4
CREATE VIEW KPI_4 AS SELECT TICKER, MAX(`PE RATIO`) AS MAX_PE , MIN(`PE RATIO`) AS MIN_PE FROM STOCK_DATA
GROUP BY TICKER ORDER BY MAX_PE DESC;
SELECT * FROM KPI_4; -- STOCKS WITH PE RATIO

-- KPI 5
CREATE VIEW KPI_5 AS SELECT TICKER, CONCAT(FORMAT(AVG(`MARKET CAP`)/1000000,2)," ",'MILLIONS') AS MARKET_CAP FROM STOCK_DATA
GROUP BY TICKER ORDER BY MARKET_CAP DESC;
SELECT * FROM KPI_5; -- MARKET CAP

-- KPI 6
SELECT  DAY,MONTH,YEAR, TICKER, MACD AS MACD, `RSI (14 DAYS)` AS RSI ,
CASE WHEN MACD >0 AND `RSI (14 DAYS)` < 80 THEN 'BUY'
     WHEN MACD <0 AND `RSI (14 DAYS)` >= 80 THEN 'SELL'
     ELSE 'NEUTRAL'
END AS BUY_SELL
FROM STOCK_DATA
WHERE MONTH = 'JAN' AND YEAR = 2023 AND TICKER = 'AMZN' 
ORDER BY DAY;

-- STORED PROCEDURE
DELIMITER //
CREATE PROCEDURE BUY_SELL(IN VAR1 VARCHAR(20), IN VAR2 INT, IN VAR3 VARCHAR(25))
BEGIN
SELECT  DAY,MONTH,YEAR, TICKER, MACD AS MACD, `RSI (14 DAYS)` AS RSI FROM STOCK_DATA
WHERE MONTH = VAR1 AND YEAR = VAR2 AND TICKER = VAR3 
ORDER BY DAY;
END //
DELIMITER ;

CALL BUY_SELL('JAN',2023,'AMZN');
CALL BUY_SELL('MAR',2022,'AMZN');

USE STOCK;
-- KPIs
SELECT * FROM KPI_1 ;-- AVERGAE DAILY TRADING VOLUME
SELECT * FROM KPI_2; -- MOST VOLATILE STOCKS
SELECT * FROM KPI_3; -- STOCKS WITH DIVIDEND
SELECT * FROM KPI_4; -- STOCKS WITH PE RATIO
SELECT * FROM KPI_5; -- MARKET CAP
CALL BUY_SELL('JAN',2023,'AMZN'); -- BUY/SELL SIGNALS



